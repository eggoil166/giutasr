// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit ).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
export type Lobby = {
  code: string,
  red: Identity | undefined,
  blue: Identity | undefined,
  redCount: number,
  blueCount: number,
  created: Timestamp,
  redChar: string | undefined,
  blueChar: string | undefined,
  redReady: boolean,
  blueReady: boolean,
  songId: string | undefined,
  started: boolean,
  redScore: number,
  blueScore: number,
  bearProgress: number,
  manProgress: number,
  gameOver: boolean,
  gameResult: string | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Lobby {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("code", AlgebraicType.createStringType()),
      new ProductTypeElement("red", AlgebraicType.createOptionType(AlgebraicType.createIdentityType())),
      new ProductTypeElement("blue", AlgebraicType.createOptionType(AlgebraicType.createIdentityType())),
      new ProductTypeElement("redCount", AlgebraicType.createU32Type()),
      new ProductTypeElement("blueCount", AlgebraicType.createU32Type()),
      new ProductTypeElement("created", AlgebraicType.createTimestampType()),
      new ProductTypeElement("redChar", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("blueChar", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("redReady", AlgebraicType.createBoolType()),
      new ProductTypeElement("blueReady", AlgebraicType.createBoolType()),
      new ProductTypeElement("songId", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("started", AlgebraicType.createBoolType()),
      new ProductTypeElement("redScore", AlgebraicType.createU32Type()),
      new ProductTypeElement("blueScore", AlgebraicType.createU32Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Lobby): void {
    Lobby.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Lobby {
    return Lobby.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


